import { MigrationInterface, QueryRunner } from 'typeorm';

export class ChangingNames1716117882399 implements MigrationInterface {
  name = 'ChangingNames1716117882399';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`DROP INDEX "public"."message_id_idx"`);
    await queryRunner.query(`DROP INDEX "public"."stream_id_idx"`);
    await queryRunner.query(
      `ALTER TABLE "events" DROP CONSTRAINT "PK_ac8b2289f1fa9de317345954bc0"`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" DROP COLUMN "globalPosition"`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" DROP CONSTRAINT "UQ_a47f9d401b39cc1f8758025b18c"`,
    );
    await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "messageId"`);
    await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "messageType"`);
    await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "streamId"`);
    await queryRunner.query(
      `ALTER TABLE "events" DROP COLUMN "streamPosition"`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "global_position" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD CONSTRAINT "PK_fccb4026be9f4c1402415a5c686" PRIMARY KEY ("global_position")`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "message_id" character varying NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD CONSTRAINT "UQ_fc6022381e0643011de569ebe7f" UNIQUE ("message_id")`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "message_type" character varying NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "stream_id" character varying NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "stream_position" bigint NOT NULL`,
    );
    await queryRunner.query(
      `CREATE UNIQUE INDEX "message_id_idx" ON "events" ("message_id") `,
    );
    await queryRunner.query(
      `CREATE INDEX "stream_id_idx" ON "events" ("stream_id") `,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`DROP INDEX "public"."stream_id_idx"`);
    await queryRunner.query(`DROP INDEX "public"."message_id_idx"`);
    await queryRunner.query(
      `ALTER TABLE "events" DROP COLUMN "stream_position"`,
    );
    await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "stream_id"`);
    await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "message_type"`);
    await queryRunner.query(
      `ALTER TABLE "events" DROP CONSTRAINT "UQ_fc6022381e0643011de569ebe7f"`,
    );
    await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "message_id"`);
    await queryRunner.query(
      `ALTER TABLE "events" DROP CONSTRAINT "PK_fccb4026be9f4c1402415a5c686"`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" DROP COLUMN "global_position"`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "streamPosition" bigint NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "streamId" character varying NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "messageType" character varying NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "messageId" character varying NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD CONSTRAINT "UQ_a47f9d401b39cc1f8758025b18c" UNIQUE ("messageId")`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD "globalPosition" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL`,
    );
    await queryRunner.query(
      `ALTER TABLE "events" ADD CONSTRAINT "PK_ac8b2289f1fa9de317345954bc0" PRIMARY KEY ("globalPosition")`,
    );
    await queryRunner.query(
      `CREATE INDEX "stream_id_idx" ON "events" ("streamId") `,
    );
    await queryRunner.query(
      `CREATE UNIQUE INDEX "message_id_idx" ON "events" ("messageId") `,
    );
  }
}
